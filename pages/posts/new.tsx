import { GetStaticProps, GetStaticPaths, GetServerSideProps } from 'next';
import { apiUrl } from '../../folder/constants';
import axios from 'axios';
import Head from 'next/head';
import { Container, ThinContainer } from '../../components/container';
import { Input } from '../../components/input';
import { Button } from '../../components/button';
import React, { FunctionComponent, useState, useRef } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { IState, IInputProps, ILoading, IButton, IFormItem } from '../../folder/interfaces';
import {
    createPostFormInputChange,
    createPostFormInputError,
    createPostFormPost,
    createPostFormDone,
} from '../../actions';
import { Loading } from '../../components/loading';

export default function Create() {
    const form = useSelector((state: IState) => state.createPostForm);
    const loading = useSelector((state: IState) => state.loading);
    const dispatch = useDispatch();
    const { title, body } = form;
    const handleSubmit = () => {
        for (const [key, value] of Object.entries(form)) {
            if (value.required && value.value == '') {
                return dispatch(createPostFormInputError(key, value));
            }
        }
        return dispatch(createPostFormPost({ title: title.value, body: body.value }));
    };
    const handleChange = (formItem: IFormItem) => {
        dispatch(createPostFormInputChange(formItem));
    };
    const successAction = () => {
        dispatch(createPostFormDone());
    };
    const loadingProps: ILoading = {
        value: loading.value,
        success: loading.success,
        error: loading.error,
        successAction: successAction,
        errorAction: successAction,
    };
    const InputTitle: IInputProps = {
        type: 'text',
        name: 'title',
        placeholder: 'title..',
        label: 'Title',
        state: title,
        action: handleChange,
    };
    const InputBody: IInputProps = {
        type: 'text',
        name: 'body',
        placeholder: 'body..',
        label: 'Body',
        state: body,
        action: handleChange,
    };
    const ButtonSubmit: IButton = {
        primary: true,
        text: 'post',
        submit: handleSubmit,
    };
    return (
        <>
            <Head>
                <title>Create new post</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <ThinContainer>
                <Loading {...loadingProps}>
                    <h1>create a post</h1>
                    <form>
                        <Input {...InputTitle} />
                        <Input {...InputBody} />
                        <Button {...ButtonSubmit} />
                    </form>
                </Loading>
            </ThinContainer>
        </>
    );
}
