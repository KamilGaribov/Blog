import { GetStaticProps, GetStaticPaths, GetServerSideProps } from 'next'
import { apiUrl, } from '../../components/variables'
import { IPost, } from '../../components/interfaces'
import axios from 'axios'
import Head from 'next/head'
import { Container } from '../../components/container'
import React, { FunctionComponent, useState, useRef, ChangeEvent } from 'react';
import { useSelector } from 'react-redux'
import { IState } from '../../reducer'


interface IComment {
    id: number;
    postId: number;
    body: string;
}

interface IComplex {
    id: number;
    title: string;
    body: string;
    comments: IComment[];
}
interface IInputComment {
    body: string;
}
interface NewNoteInputProps {
    addNote(note: string): void;
}


export default function Id({ data }: { data: IComplex }, { addNote }: { addNote: NewNoteInputProps }) {
    const { id, title, body }: IPost = data
    const comments: IComment[] = data.comments
    const [newComments, setNewComments] = useState([])
    const inputEl = useRef(null);
    // const comments2 = useSelector<IState, IState['comments']>((state) => state.comments)
    const [note, setNote] = React.useState("");

    const updateNote = (event: ChangeEvent<HTMLInputElement>) => {
        setNote(event.target.value);
    };

    const onAddNoteClick = () => {
        addNote(note);
        setNote("");
    };
    return (
        <>
            <Head>
                <title>{title}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Container>
                <h1>{title}</h1>
                <h3>{body}</h3>
                <hr />
                <form>
                    <label htmlFor="comment">Leave a comment</label>
                    <input ref={inputEl} id="comment" placeholder="comment.." onChange={updateNote}></input>
                    <button type="button" onClick={onAddNoteClick}>Add note</button>
                </form>
                <ul>
                    <ul>lenght: {note.length}</ul>
                    {/* {note.map((item, i) => {
                        return (
                            <li key={i}>{item.body}</li>
                        )
                    })} */}
                    {comments.map((item, i) => {
                        return (
                            <li key={i}>{item.body}</li>
                        )
                    })}
                </ul>
            </Container>
        </>
    )
}


export const getServerSideProps: GetServerSideProps = async ({ params }) => {
    if (params) { var { id } = params }
    const response = await axios.get(`${apiUrl}/${id}?_embed=comments`);
    const data: IComplex[] = response.data;
    return {
        props: { data }
    };
}