import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { GetStaticProps, GetStaticPaths, GetServerSideProps } from 'next'
import axios from 'axios'
import { apiUrl, } from '../components/variables'
import { IPost, } from '../components/interfaces'
import { Card, MyComponent, CompoH1 } from '../components/card'
import { myTheme, myH1 } from '../components/my-theme'
import { DefaultTheme } from 'styled-components';
import image1 from '../public/article1.jpeg'
import { Container } from '../components/container'
import { createStore, applyMiddleware } from 'redux'
import { useState, createContext, useEffect } from 'react'
import { MouseEvent } from 'react';
import { flattenDiagnosticMessageText } from 'typescript'
import { useSelector, useDispatch, RootStateOrAny } from 'react-redux'
import { getPosts } from '../actions'

const user = {
  name: "Kamil",
  surname: "Garibov"
}
export const userContext = createContext(user)

interface IState {
  posts: []
}

export default function Home({ data }: { data: IPost[] }) {
  const { posts } = useSelector((state: IState) => state)
  console.log("data2: ", posts)
  console.log("Home")

  const [data2, setData2] = useState(posts)
  const dispatch = useDispatch()


  useEffect(() => {
    dispatch(getPosts())
  }, [])

  const [value, setValue] = useState<boolean>(true)
  const [test, setTest] = useState<boolean>(true)
  const [removed, setRemoved] = useState<number>(0)
  const [page, setPage] = useState<boolean>(true)
  const setValue2 = (e: MouseEvent<HTMLButtonElement>) => {
    console.log('salam')
    console.log(e)
    setValue(!value)
    // setTest(!test)
  }
  return (
    <div>
      <Head>
        <title>My Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <button onClick={() => setPage(!page)}>click</button>
      {page ? (
        <Container>
          {posts ? (
            posts.map((item, i) => {
              return (
                removed != item.id ? (
                  <Card test={test} setTest={setTest} setRemoved={setRemoved} value={value} setValue={setValue2} key={i} {...item} landing={i == 0 ? true : false} />
                ) : null
              )
            })
          ) : <div className="loading">loading......</div>}
        </Container>
      ) : null}
    </div>
  )
}


export const getServerSideProps: GetServerSideProps = async () => {
  const response = await axios.get(apiUrl);
  const data: IPost[] = response.data.splice(0, 4);
  return {
    props: { data }
  };
}